buildscript {
    ext {
        springBootVersion = '3.2.1'
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }

            resources {
                srcDir 'src/main/resources'
                srcDir 'src/main/java'
            }
        }
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '3.0.3'

        implementation group: 'com.google.code.gson', name: 'gson', version: '+'

        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '+'

        runtimeOnly group: 'com.mysql', name: 'mysql-connector-j', version: '8.2.0'

        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.30'

        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"
    }

    processResources {
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs += "--enable-preview"
    }

    tasks.withType(Test).configureEach {
        jvmArgs += "--enable-preview"
    }

    tasks.withType(JavaExec).tap {
        configureEach {
            jvmArgs += "--enable-preview"
        }
    }
}